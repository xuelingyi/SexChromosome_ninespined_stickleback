pop = read.csv("../v7_info/pop_v7.csv")
sif = read.csv("../v7_info/ind_v7.csv")
sif = sif[sif$Species == "Pungitius pungitius", 
          c("SampleID", "Species", "Population", "sex_region", "sex", "Feng2019")]
# 1049
sif$sex = gsub("F", "Female", sif$sex)
sif$sex = gsub("M", "Male", sif$sex)
## note: modified * in the my pop order list!!! 
my.pop.order = c("GBR-GRO*", "SCO-HAR*", "FRA-VEY*", "BEL-MAL", "DEN-NOR", "NOR-UGE", "NOR-ENG", 
                 "SWE-FIS", "GER-RUE", "POL-GDY", "NOR-KVN",
                 "DEN-RES", "NOR-TYR", "SWE-LUN", "SWE-GOT", "SWE-HAN", "SWE-NAV*", "SWE-ABB", 
                 "SWE-BYN", "SWE-KIR", "SWE-BOL", "LAT-JAU", "FIN-SEI", "FIN-TVA", "FIN-RII", 
                 "FIN-HEL", "FIN-KIV", "FIN-KAR", "EST-PUR", "FIN-KEV", "FIN-HAM", "FIN-UKO", 
                 "FIN-PUL", "FIN-KRK", "FIN-RYT", "FIN-PYO", "RUS-KRU", "RUS-BOL", "RUS-MAS", 
                 "RUS-LEV",
                 "RUS-LEN", "JAP-BIW","USA-HLA", "CAN-FLO", "CAN-TEM")
non_EU = c("RUS-LEN", "JAP-BIW","USA-HLA", "CAN-FLO", "CAN-TEM")
unknown = c("SCO-HAR", "GBR-GRO", "FRA-VEY", "SWE-NAV")

sif887 = sif[sif$Feng2019 == "YES",]
rm(sif)
for (i in 1:nrow(sif887)) {
  if(sif887[i, "Population"] %in% unknown){
    sif887[i, "Population"] = paste0(sif887[i, "Population"], "*")
  }
}

setwd("Feng887/")
#write.table(sif887$SampleID, "Feng887.list", row.names = F, col.names = F, quote = F)
## subsets of European pops having LG3 or LG12 sex chr
#write.table(sif887[sif887$Population %in% pop[pop$sex_region == "LG3", "Population"], "SampleID"], "LG3_ID.list", quote = F, col.names = F, row.names = F)
#write.table(sif887[sif887$Population %in% 
#                     pop[pop$sex_region == "LG12" | pop$Population == "POL-GDY", "Population"] & #!(sif887$Population %in% non_EU), "SampleID"], "LG12_ID.list", 
#            quote = F, col.names = F, row.names = F)

unique(pop$sex_region)
pop[pop$Population %in% paste0(unknown, "*"), "sex_region"] <- "unclear"

my.map = function(sif, ...) {
  library(mapdata)
  library(maptools)
  library(dplyr)
  library(ggsn)
  library(PBSmapping)
  library(data.table)
  library(ggrepel)
  library(ggplot2)
  
  xmin = min(sif$long_ling) - 1
  xmax = max(sif$long_ling) + 1
  ymin = min(sif$lat_ling) - 1
  ymax = max(sif$lat_ling) + 1
  
  world = map_data("world")
  setnames(world, c("X","Y","PID","POS","region","subregion"))
  map = clipPolys(world, xlim=c(xmin, xmax), ylim=c(ymin, ymax), keepExtra=TRUE)
  
  mercator = ggplot() + coord_map(xlim=c(xmin, xmax), ylim=c(ymin, ymax)) + 
    geom_polygon(data=map, aes(X,Y,group=PID), fill="grey97", color="grey50") + 
    theme_void() 
  return(mercator)
}
mercator = my.map(pop[!(pop$Population %in% non_EU),])
pdf("Feng887_EUpop_sexregion_map.pdf", width=5, height=6)
mercator + geom_point(data=pop, 
                      aes(x=long_ling, y=lat_ling, fill=sex_region, color=mt), 
                      size=2.5, shape=21, stroke=1) +
  scale_fill_manual(values = c("LG3"="#371a7c", "LG12"="#e9a64c", "unclear"="#c8bedf"))+
  scale_color_manual(values = c("WL"="#371a7c", "EL"="#e9a64c", "Mix"="#c8bedf"))+
  theme_void() 
dev.off()

## in case for QGIS 
unique(pop$sex_region)
unique(pop$Species)
pop = pop[!(pop$Population %in% non_EU),]
## add mt lineage assignment
pop$mt = "EL"
for (i in 1:nrow(pop)){
  east = length(grep("A", pop[i, "mt_Feng2019"])) + 
    length(grep("B", pop[i, "mt_Feng2019"])) 
  
  west =  length(grep("C", pop[i, "mt_Feng2019"])) + 
    length(grep("D", pop[i, "mt_Feng2019"])) 
  
  if(east*west != 0) {pop[i, "mt"]="Mix"}
  else{
    if(west > 0) {pop[i, "mt"]="WL"}}
}

unique(pop$Ecotype)
unique(pop$mt)
# [1] "WL"  "Mix" "EL" 
unique(pop$sex_region)

total =0 
for (lg in c("LG3", "LG12", "unclear")){
  for (mt in unique(pop$mt)){
    a = pop[pop$sex_region == lg & pop$mt == mt &
              pop$Ecotype == "Marine", 
            c("Country", "Area", "geography_Feng2019", "Locality", "Population", "mt_Feng2019", "NO.v7.samples", "lat_ling", "long_ling", "Ecotype", "sex_region")]

    write.csv(a, paste0("../../LG3_introgression_Figures/map/pop_", lg, "_", mt, "_", "marine.csv"),row.names = F)
    total = total + nrow(a)
    
    b = pop[pop$sex_region == lg & pop$mt == mt &
              pop$Ecotype != "Marine", 
            c("Country", "Area", "geography_Feng2019", "Locality", "Population", "mt_Feng2019", "NO.v7.samples", "lat_ling", "long_ling", "Ecotype", "sex_region")]
    write.csv(b,paste0("../../LG3_introgression_Figures/map/pop_", lg, "_", mt, "_", "freshwater.csv"), row.names = F)
    total = total + nrow(b)
  }
}
total



# F-values
for (chr in c(3, 12)){
  title = ifelse(chr==3, "LG3:17260000-17340000", "LG12:1-16900000")
  data = paste0("Feng887_LG", chr, "sex_a1m3")
  het = read.table(paste0(data, ".het"), header=1)
  het = merge(het, sif887, by.x="INDV", by.y="SampleID")
  assign(paste0("LG", chr, "sex_het_plot"), ggplot() + 
           geom_jitter(data=het, 
                       aes(x=factor(Population, levels = my.pop.order), y=F, color=sex), 
                       size=3, alpha=0.5, width=0.3) + 
           scale_color_manual(values = c("Female"="indianred", "Male"="royalblue")) +
           labs(x="45 Populations", y="inbreeding coefficient (F)", 
                title=title) + theme_bw() +
           theme(axis.text.x = element_text(angle=90)))
}
pdf("../../LG3_introgression_Figures/Feng887only_F_sexID_4pop.pdf", width = 20, height = 8)
png("../../LG3_introgression_Figures/Feng887only_F_sexID_4pop.png", width = 20, height = 8, units = "in", res=600)
ggarrange(ncol=1, nrow=2, LG3sex_het_plot, LG12sex_het_plot)
dev.off()




## generate the phylogeny dataset (101 individuals) and construct ML trees
ind=tree101

# the LG3 SDR  
chr=3
bcftools view -S ${ind}.list ../../v7/v7.LG${chr}.vcf.gz --regions LG3:17260000-17340000 \
| vcftools --vcf - --minGQ 20 --minQ 30 --min-meanDP 5 --max-meanDP 25 --maf 0.01 --max-missing 0.3 --recode --recode-INFO-all -c \
| bcftools view -Oz -o ${ind}_LG3sex_a1m3.vcf.gz

vcf2phylip.py --input tree101_LG3sex_a1m3.vcf.gz

raxmlHPC -f a -m GTRGAMMA -p 101 -x 101 -# 1000 \
-s tree101_LG3sex_a1m3.min4.phy \
-n tree101_LG3sex_a1m3


# the LG12 SDR
chr=12
bcftools view -S ../${ind}.list ../../../v7/v7.LG${chr}.vcf.gz --regions LG12:1-16900000 \
| vcftools --vcf - --minGQ 20 --minQ 30 --min-meanDP 5 --max-meanDP 25 --maf 0.01 --max-missing 0.3 --recode --recode-INFO-all -c \
| bcftools view -Oz -o ${ind}_LG12sex_a1m3.vcf.gz

vcf2phylip.py --input tree101_LG12sex_a1m3.vcf.gz

raxmlHPC-PTHREADS -T 8 \
-f a -m GTRGAMMA -p 101 -x 101 -# 1000 \
-s tree101_LG12sex_a1m3.min4.phy \
-n tree101_LG12sex_a1m3

